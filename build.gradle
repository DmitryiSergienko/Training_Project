plugins {
    id 'java'
    id 'io.freefair.lombok' version '8.6'
    id 'io.qameta.allure' version '2.12.0'
    id 'io.qameta.allure-adapter' version '2.12.0'
    id 'jacoco'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

// Define the version of Allure you want to use via the allureVersion property
def allureVersion = "2.29.0"

dependencies {
    // https://mvnrepository.com/artifact/io.qameta.allure/allure-rest-assured
    implementation 'io.qameta.allure:allure-rest-assured:2.29.0'

    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
    //testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.11.4'

    // https://mvnrepository.com/artifact/io.rest-assured/rest-assured
    testImplementation 'io.rest-assured:rest-assured:5.4.0'

    // Import allure-bom to ensure correct versions of all the dependencies are used
    testImplementation platform("io.qameta.allure:allure-bom:$allureVersion")
    // Add necessary Allure dependencies to dependencies section
    testImplementation "io.qameta.allure:allure-junit5"

    // Добавляем Selenium (если еще не добавлен)
    implementation 'org.seleniumhq.selenium:selenium-java:4.30.0'

    //testImplementation 'junit:junit:5.10.0'

    implementation 'ch.qos.logback:logback-classic:1.4.14'

    // Добавляем Selenide
    implementation("com.codeborne:selenide:7.8.1") // Укажите последнюю версию

    // Опционально: добавьте зависимости для JUnit или TestNG (если используете их)
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.13.0-M2")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.13.0-M2")
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.13.0-M2' // используйте  версию, аналогичную библиотеке junit-jupiter-engine

    // https://mvnrepository.com/artifact/org.assertj/assertj-core
    testImplementation("org.assertj:assertj-core:3.27.3")

    testImplementation 'org.junit.jupiter:junit-jupiter:5.13.0-M2'
}

test {
    useJUnitPlatform() // Если используете JUnit 5

    finalizedBy jacocoTestReport // report is always generated after tests run
}

allure {
    version = allureVersion
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                version = allureVersion
            }
        }
    }
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()

    testLogging {
        events "started", "passed", "skipped", "failed"
        exceptionFormat "short"
        showExceptions = true
        showCauses = true
    }

    systemProperties(System.getProperties())
    systemProperty 'selenide.threadCheckInterval', '0'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21) // Укажите версию Java, которую используете
    }
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report

    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacoco {
    toolVersion = "0.8.13"
}